CentOS 7 Setup and Code Modifications

Quick-Start Summary:

= Copy the files in ./CentOS7 to ./ and overwrite the files they will replace.
= Create a basic CentOS 7 VM
= Install the needed packages:  wget unzip perl gcc-mips64-linux-gnu (in EPEL) qemu-system-mips (if you want to test)
= Compile the code
= Crate a flash file and boot it up in QEMU!

Details:

There's a couple of problems with building this more than a decade after it was released.  First off, the code is designed for GCC 4 and older.  If you compile it with, say, GCC 10, you're going to get lots of "multiple definition of" errors and the build will fail.  Unfortunately, it's getting very difficult to find packages for such old compilers for modern Linux environments.  To make this worse, we don't need a normal GCC package, we need a MIPS cross-compiler, which is even harder to get!

Fortunately, RHEL/CentOS 7 still packages an old-enough GCC cross-compiler for MIPS:  4.8.  It's newer than what YAMON was developed with:  YAMON 2.16 was released in June, 2008, when 4.3 was the brand new; our compiler is nearly 5 years newer, but it's old enough to be made to work.  So we will need to set up a VM with CentOS 7, install our cross-compiler and compile the YAMON code.

There are a few changes that we need to make to the original build enviornment.  In bin/Makefile, we need to configure the build for Linux.  Also, the compiler prefix is different in the CentOS-supplied packages, and we will need to update the Makefile to match.

In addition, our too-new compiler has some new features that the code does not expect.  Because this is going into a flash block in a specific address space, the resulting binary is linked to fit in specific places in that space.  The linker is given specific locations for each segment generated by the compiler.  Unfortunately, there is are two new segments added by our new compiler that need to be properly handled, so we need to update the linker script as well -- once each for EL and EB (little- and big-endian).  With those changes in place, the code will successfully compile, and I have successfully boot-tested the resulting file in QEMU.

Please note that I have only tested this by booting it in QEMU using mipsel.  Supposedly the same image should work on both mips (big-endian) and mipsel (little-endian); however, when I tried to run it in qemu-system-mips, it just froze QEMU.  Seeing as I only need little-endian I left it as it was; but if you need big-endian, further investigation may be required.

Walkthrough:

I'm going to document exactly what I did to create these changes, compile the code and test the result.  You will not have to actually edit the files:  use the already edited files in this directory tree.  In addition, I've included the resulting bin, fl and rec files.  This was all done via a small VM running under VirtualBox 6.1.  If you're going to use something else to create a CentOS environment, that's fine too:  this should give you the idea of how to proceed.

(Quick notes about the format below:  items betwen ( ) are informational notes;  items between < > are steps for you to perform but without exact step-by-step information; the rest are either labels of things to click or find, or things to type in.)


<Download CentOS-7-x86_64-Minimal-2009.iso from e.g. http://mirror.chpc.utah.edu/pub/centos-altarch/7.9.2009/isos/x86_64 >
(NOTE:  Has to be x86_64:  others don't have EPEL)

<Start VirtualBox Manager>
New (Blue busrst icon)
	Expert Mode (Button)
	Name:  YAMON Compiler VM
	Machine Folder:  <Put it where you think it should go>
	Type:  Linux
	Verson:  Red Hat (64-bit)
	Memory Size:  1024MB (We don't need that much, but the installer does!)
	Create a virtual hard disk now:  Selected
Create (Name and OS)
	File location:  <Default name and path should be OK>
	File size:  5GB
	Hard disk file type:  <Default should be OK>
	Storage on physical hard disk:  Dynamically allocated
Create (Virtual disk)/Settings (for new VM:  Orange gear)
	Empty (Under Storage Devices/Controller: IDE): Selected
	<Blue CD icon next to Optical Drive>/Choose a disk file
	<Select the ISO you downloaded above>
OK (VM Settings)/Start (Green arrow)
(From VM console window:)
Install CentOS 7/(Wait for the CD to boot into the graphical installer)
Next (English and US)/Installation Destination/Done (Use the whole disk automatically)
Network and Hostname/Off (to move the slider to on!)
	Hostname:  yamon-centos7
Apply/Done (Network)/Begin Installation
Root Password/<Enter a password>/Done (You may have to press Done twice if you used a weak password)
User Creation
	Full name:  YAMON User
	User name:  yamon
	Make this user administrator:  Checked
	Password:  <Enter a password>
Done (You may have to press Done twice if you used a weak password)
(Wait for the install to finish)/Reboot

<Log into VM as yamon>
(From here on out, we will only log in as yamon)
sudo yum -y update
<Any time you use sudo, it may ask for your password:  enter it when it does>
(Wait for install to finsih)/shutdown -r now

<Log into VM>
(We need some tools:  wget to get the code; unzip to unzip it; the build requires perl; and nano to make changes to our makefiles)
sudo yum -y install wget unzip perl nano
(The compiler is in EPEL:  connect to the repository)
sudo yum -y install epel-release
(Install the compiler, which will also install the binutils we need)
sudo yum -y install gcc-mips64-linux-gnu
(Get the YAMON code from original GitHub project)
(NOTE:  You should alrady have gotten the modified version from fts-tmassey)
cd ~
mkdir yamon
cd yamon
wget https://github.com/binsgit/mips-yamon/archive/refs/heads/master.zip
mv master.zip yamon2.16-master.zip
unzip yamon2.16-master.zip
cd mips-yamon-master/bin
nano Makefile
<Find TOOLCHAIN (there are 3 in a row starting at line 95), put a # in front of the sde one and remove the # in front of the linux one.>
<Find ifeq ($(TOOLCHAIN),linux) at line 125; next there are four variables that contain "mipsel-linux".  Change them to say "mips64-linux-gnu", leaving the last dash and word at the end.>
<CTRL><X> (Exit)/Y (Save changes)/<ENTER> (Same filename)
nano link/link_eb.xn
<Find the line that contains "_ftext_ram = ABSOLUTE(.)" at line 92 and there will be a (.text) line below it.  Add the following below the (.text) line:>
    * (.text.*)
    *(*.MIPS.abiflags*)
<CTRL><X> (Exit)/Y (Save changes)/<ENTER> (Same filename)
nano link/link_el.xn
<Make exactly the same change, save and exit.>
(Set up the build environment)
make install
(Start the build)
make all
(You will now have yamon-02.16.bin (and .fl and .rec) in the bin directory.)
(Let's test and see that it worked: install QEMU MIPS and an easy way to kill it when done)
sudo yum -y install qemu-system-mips psmisc
cd ~/yamon
mkdir verify
cd verify
cp ../mips-yamon-master/bin/yamon-02.16.bin .
dd if=/dev/zero bs=1M count=4 | tr '\000' '\377' > pflash.img
dd if=yamon-02.16.bin of=pflash.img conv=notrunc
qemu-system-mipsel -nographic -M malta -drive if=pflash,file=./pflash.img,format=raw
(You will be taken to a YAMON prompt!)
(You will need to log into a different console to kill YAMON: it doesn't have a way to exit!  From there:)
killall qemu-system-mipsel

